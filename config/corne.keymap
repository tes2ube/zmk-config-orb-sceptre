/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&nice_view_spi {
    cs-gpios = <&pro_micro 10 GPIO_ACTIVE_HIGH>;
};

&led_strip {
    chain-length = <21>;
};

/ {
    behaviors {
        HT_CAP: HT_CAP {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_CAP";
            bindings = <&kp>, <&caps_word>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
        };

        DAN_CAP: DAN_CAP {
            compatible = "zmk,behavior-tap-dance";
            label = "DAN_CAP";
            #binding-cells = <0>;
            bindings = <&HT_CAP LSHIFT 0>, <&kp CAPS>;
        };

        HT_LNUM: HT_LNUM {
            compatible = "zmk,behavior-hold-tap";
            label = "HT_LNUM";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        DAN_L1_L2: DAN_L1_L2 {
            compatible = "zmk,behavior-tap-dance";
            label = "DAN_L1_L2";
            #binding-cells = <0>;
            bindings = <&HT_LNUM 1 1>, <&HT_LNUM 2 2>;
        };

        M_F1_F13: M_F1_F13 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F1_F13";
            bindings = <&kp F1>, <&kp F13>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F2_F14: M_F2_F14 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F2_F14";
            bindings = <&kp F2>, <&kp F14>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F3_F15: M_F3_F15 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F3_F15";
            bindings = <&kp F3>, <&kp F15>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F4_F16: M_F4_F16 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F4_F16";
            bindings = <&kp F4>, <&kp F16>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F5_F17: M_F5_F17 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F5_F17";
            bindings = <&kp F5>, <&kp F17>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F6_F18: M_F6_F18 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F6_F18";
            bindings = <&kp F6>, <&kp F18>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F7_F19: M_F7_F19 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F7_F19";
            bindings = <&kp F7>, <&kp F19>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F8_F20: M_F8_F20 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F8_F20";
            bindings = <&kp F8>, <&kp F20>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F9_F21: M_F9_F21 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F9_F21";
            bindings = <&kp F9>, <&kp F21>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F10_F22: M_F10_F22 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F10_F22";
            bindings = <&kp F10>, <&kp F22>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F11_F23: M_F11_F23 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F11_F23";
            bindings = <&kp F11>, <&kp F23>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };

        M_F12_F24: M_F12_F24 {
            compatible = "zmk,behavior-mod-morph";
            label = "M_F12_F24";
            bindings = <&kp F12>, <&kp F24>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    macros {
    };

    keymap {
        compatible = "zmk,keymap";

        home {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q                     &kp W        &kp W       &kp E       &kp R         &kp T       &kp Y      &kp U          &kp I           &kp O            &kp P            &kp LBKT
&kp TAB                   &lt 1 A      &lt 2 S     &lt 3 D     &kp F         &kp G       &kp H      &kp J          &lt 3 K         &lt 2 L          &lt 1 SEMI       &kp SQT
&kp C_AL_KEYBOARD_LAYOUT  &mt LCTRL Z  &mt LALT X  &mt LGUI C  &mt LSHIFT V  &kp B       &kp N      &mt RSHIFT M   &mt RGUI COMMA  &mt RALT PERIOD  &mt RCTRL SLASH  &kp EXCL
                                                   &lt 3 ESC   &DAN_L1_L2    &DAN_CAP    &kp SPACE  &kp BACKSPACE  &kp ENTER
            >;
        };

        num-sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp SLASH     &kp MINUS  &kp N7  &kp N8  &kp N9  &trans       &kp C_VOL_UP  &kp K_PREV  &kp K_PP  &kp K_NEXT  &trans           &kp RBKT
&kp ASTERISK  &kp PLUS   &kp N4  &kp N5  &kp N6  &kp EQUAL    &kp C_VOL_DN  &kp LPAR    &kp RPAR  &kp LBRC    &kp RIGHT_BRACE  &kp BACKSLASH
&kp LSHIFT    &kp N0     &kp N1  &kp N2  &kp N3  &kp ENTER    &kp K_MUTE    &kp LBKT    &kp RBKT  &kp LT      &kp GT           &trans
                                 &to 0   &trans  &trans       &trans        &kp DEL     &trans
            >;
        };

        arrow-ctrl {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp K_UNDO  &kp K_REDO  &kp UP      &kp C_AL_WWW  &kp C_AL_FILE_BROWSER  &kp K_MENU    &mt PSCRN LC(PSCRN)                     &M_F9_F21  &M_F10_F22  &M_F11_F23  &M_F12_F24  &bl BL_INC
&kp PSCRN   &kp LEFT    &kp DOWN    &kp RIGHT     &kp HOME               &kp END       &kp C_AC_DESKTOP_SHOW_ALL_APPLICATIONS  &M_F5_F17  &M_F6_F18   &M_F7_F19   &M_F8_F20   &bl BL_DEC
&kp C_MENU  &kp K_CUT   &kp K_COPY  &kp K_PASTE   &kp PG_UP              &kp PG_DN     &kp C_AC_DESKTOP_SHOW_ALL_WINDOWS       &M_F1_F13  &M_F2_F14   &M_F3_F15   &M_F4_F16   &trans
                                    &trans        &trans                 &trans        &trans                                  &trans     &trans
            >;
        };

        rh-rgb {
            bindings = <
&kp LBKT   &kp P     &kp O    &kp I      &kp U          &kp Y        &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(67,100,50)  &rgb_ug RGB_COLOR_HSB(112,100,48)  &rgb_ug RGB_COLOR_HSB(186,100,50)  &rgb_ug RGB_COLOR_HSB(245,100,50)  &rgb_ug RGB_COLOR_HSB(287,100,50)
&kp APOS   &kp SEMI  &kp L    &kp K      &kp J          &kp H        &rgb_ug RGB_TOG                  &rgb_ug RGB_BRI                   &rgb_ug RGB_SAI                    &rgb_ug RGB_HUI                    &rgb_ug RGB_SPI                    &rgb_ug RGB_EFF
&kp SPACE  &kp FSLH  &kp DOT  &kp COMMA  &kp M          &kp N        &rgb_ug RGB_COLOR_HSB(0,0,0)     &rgb_ug RGB_BRD                   &rgb_ug RGB_SAD                    &rgb_ug RGB_HUD                    &rgb_ug RGB_SPD                    &rgb_ug RGB_EFR
                              &trans     &kp BACKSPACE  &kp ENTER    &kp C_VOL_DN                     &kp K_MUTE                        &kp C_VOL_UP
            >;
        };
    };
};
